// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/report.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StartTimestamp int64                  `protobuf:"varint,1,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp   int64                  `protobuf:"varint,2,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	Metrics        []string               `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	mi := &file_proto_report_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_proto_report_proto_rawDescGZIP(), []int{0}
}

func (x *ReportRequest) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *ReportRequest) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *ReportRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PdfData       []byte                 `protobuf:"bytes,1,opt,name=pdf_data,json=pdfData,proto3" json:"pdf_data,omitempty"`
	PageCount     int32                  `protobuf:"varint,2,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
	GeneratedAt   string                 `protobuf:"bytes,3,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportResponse) Reset() {
	*x = ReportResponse{}
	mi := &file_proto_report_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResponse) ProtoMessage() {}

func (x *ReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResponse.ProtoReflect.Descriptor instead.
func (*ReportResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_proto_rawDescGZIP(), []int{1}
}

func (x *ReportResponse) GetPdfData() []byte {
	if x != nil {
		return x.PdfData
	}
	return nil
}

func (x *ReportResponse) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *ReportResponse) GetGeneratedAt() string {
	if x != nil {
		return x.GeneratedAt
	}
	return ""
}

type TimeSeriesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Key            string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	StartTimestamp int64                  `protobuf:"varint,2,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp   int64                  `protobuf:"varint,3,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TimeSeriesRequest) Reset() {
	*x = TimeSeriesRequest{}
	mi := &file_proto_report_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesRequest) ProtoMessage() {}

func (x *TimeSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesRequest.ProtoReflect.Descriptor instead.
func (*TimeSeriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_report_proto_rawDescGZIP(), []int{2}
}

func (x *TimeSeriesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TimeSeriesRequest) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *TimeSeriesRequest) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

type TimeSeriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSeriesResponse) Reset() {
	*x = TimeSeriesResponse{}
	mi := &file_proto_report_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesResponse) ProtoMessage() {}

func (x *TimeSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesResponse.ProtoReflect.Descriptor instead.
func (*TimeSeriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_report_proto_rawDescGZIP(), []int{3}
}

func (x *TimeSeriesResponse) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *TimeSeriesResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_proto_report_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_proto_report_proto_rawDescGZIP(), []int{4}
}

func (x *DataPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_proto_report_proto protoreflect.FileDescriptor

const file_proto_report_proto_rawDesc = "" +
	"\n" +
	"\x12proto/report.proto\x12\x06report\"w\n" +
	"\rReportRequest\x12'\n" +
	"\x0fstart_timestamp\x18\x01 \x01(\x03R\x0estartTimestamp\x12#\n" +
	"\rend_timestamp\x18\x02 \x01(\x03R\fendTimestamp\x12\x18\n" +
	"\ametrics\x18\x03 \x03(\tR\ametrics\"m\n" +
	"\x0eReportResponse\x12\x19\n" +
	"\bpdf_data\x18\x01 \x01(\fR\apdfData\x12\x1d\n" +
	"\n" +
	"page_count\x18\x02 \x01(\x05R\tpageCount\x12!\n" +
	"\fgenerated_at\x18\x03 \x01(\tR\vgeneratedAt\"s\n" +
	"\x11TimeSeriesRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x0fstart_timestamp\x18\x02 \x01(\x03R\x0estartTimestamp\x12#\n" +
	"\rend_timestamp\x18\x03 \x01(\x03R\fendTimestamp\"Z\n" +
	"\x12TimeSeriesResponse\x122\n" +
	"\vdata_points\x18\x01 \x03(\v2\x11.report.DataPointR\n" +
	"dataPoints\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\"?\n" +
	"\tDataPoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value2\x9c\x01\n" +
	"\rReportService\x12?\n" +
	"\x0eGenerateReport\x12\x15.report.ReportRequest\x1a\x16.report.ReportResponse\x12J\n" +
	"\x11GetTimeSeriesData\x12\x19.report.TimeSeriesRequest\x1a\x1a.report.TimeSeriesResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_report_proto_rawDescOnce sync.Once
	file_proto_report_proto_rawDescData []byte
)

func file_proto_report_proto_rawDescGZIP() []byte {
	file_proto_report_proto_rawDescOnce.Do(func() {
		file_proto_report_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_report_proto_rawDesc), len(file_proto_report_proto_rawDesc)))
	})
	return file_proto_report_proto_rawDescData
}

var file_proto_report_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_report_proto_goTypes = []any{
	(*ReportRequest)(nil),      // 0: report.ReportRequest
	(*ReportResponse)(nil),     // 1: report.ReportResponse
	(*TimeSeriesRequest)(nil),  // 2: report.TimeSeriesRequest
	(*TimeSeriesResponse)(nil), // 3: report.TimeSeriesResponse
	(*DataPoint)(nil),          // 4: report.DataPoint
}
var file_proto_report_proto_depIdxs = []int32{
	4, // 0: report.TimeSeriesResponse.data_points:type_name -> report.DataPoint
	0, // 1: report.ReportService.GenerateReport:input_type -> report.ReportRequest
	2, // 2: report.ReportService.GetTimeSeriesData:input_type -> report.TimeSeriesRequest
	1, // 3: report.ReportService.GenerateReport:output_type -> report.ReportResponse
	3, // 4: report.ReportService.GetTimeSeriesData:output_type -> report.TimeSeriesResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_report_proto_init() }
func file_proto_report_proto_init() {
	if File_proto_report_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_report_proto_rawDesc), len(file_proto_report_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_report_proto_goTypes,
		DependencyIndexes: file_proto_report_proto_depIdxs,
		MessageInfos:      file_proto_report_proto_msgTypes,
	}.Build()
	File_proto_report_proto = out.File
	file_proto_report_proto_goTypes = nil
	file_proto_report_proto_depIdxs = nil
}
